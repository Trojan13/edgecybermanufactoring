esphome:
  name: mpu6050-sensor-node

esp8266:
  board: nodemcuv2

# Enable logging
logger:

ota:
  password: ""

wifi:
  ssid: ""
  password: ""

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Mpu6050-Sensor-Node"
    password: "gKTXqCNsiJZi"

i2c:
  sda: D2
  scl: D1
  scan: true
  id: bus_a

mqtt:
  broker: 192.168.178.53
  username: test
  password: test
  on_message:
    - topic: actions/stop
      then:
        - switch.turn_off: relay_switch
    - topic: actions/start
      then:
        - switch.turn_on: relay_switch
captive_portal:

switch:
  - platform: gpio
    id: relay_switch
    pin: D5
    name: "Relay"
sensor:
  - platform: mpu6050
    address: 0x68
    update_interval: 5s
    accel_x:
      name: "MPU6050 Accel X"
      id: accel_x
      on_value:
        - mqtt.publish_json:
            topic: "acceleration"
            payload: |-
              root["accel_x"] = id(accel_x).state;
        - mqtt.publish_json:
            topic: "acceleration-test"
            payload: id(accel_x).state
    accel_y:
      name: "MPU6050 Accel Y"
      id: accel_y
      on_value:
        - mqtt.publish_json:
            topic: "acceleration"
            payload: |-
              root["accel_y"] = id(accel_y).state;
    accel_z:
      name: "MPU6050 Accel z"
      id: accel_z
      on_value:
        - mqtt.publish_json:
            topic: "acceleration"
            payload: |-
              root["accel_z"] = id(accel_z).state;
    gyro_x:
      name: "MPU6050 Gyro X"
    gyro_y:
      name: "MPU6050 Gyro Y"
    gyro_z:
      name: "MPU6050 Gyro z"
    temperature:
      name: "MPU6050 Temperature"
      id: temperature
      on_value:
        - mqtt.publish_json:
            topic: "temperature"
            payload: |-
              root["temperature"] = id(temperature).state;
